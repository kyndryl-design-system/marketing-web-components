{"version":3,"file":"components-callToAction-persistentCta-persistentCta-stories.ad761b7a.iframe.bundle.js","mappings":";;;;AAsEA;;;AAGA;;AAEA;;;AAGA;;;;AAKA;;;ACUA;AACA;AACA;AACA;;AAKA","sources":["webpack://@kyndryl-design-system/shidoka-content/./src/components/callToAction/persistentCta/persistentCta.ts","webpack://@kyndryl-design-system/shidoka-content/./src/components/callToAction/persistentCta/persistentCta.stories.ts"],"sourcesContent":["import { html, LitElement } from 'lit';\nimport { property, customElement, state } from 'lit/decorators.js';\n\nimport '@kyndryl-design-system/shidoka-foundation/components/icon';\nimport { BREAKPOINTS } from '@kyndryl-design-system/shidoka-foundation/common/defs/breakpoints';\nimport { getCurrentBreakpoint } from '@kyndryl-design-system/shidoka-foundation/common/helpers/breakpoints';\nimport downloadIcon20 from '@carbon/icons/es/download/20';\nimport downloadIcon32 from '@carbon/icons/es/download/32';\nimport stylesheet from './persistentCta.scss';\n\n@customElement('kd-persistent-cta')\nexport class PersistentCta extends LitElement {\n\tstatic override styles = stylesheet;\n\n\t/** Brief text that invites the reader to download the entire article or paper. Max character count: 28 */\n\t@property({ type: String })\n\tctaText = '';\n\n\t/** URL of the downloadable article or paper. */\n\t@property({ type: String })\n\tctaLink = '';\n\n\t/** Open the download in a new window. */\n\t@property({ type: Boolean })\n\topenNewWindow = true;\n\n\t/** A brief explanation of the entire article or paper used to pique the interest of the reader. Max character count: 120 */\n\t@property({ type: String })\n\tbodyText = '';\n\n\t/**\n\t * Used to render different icon size for mobile\n\t * @ignore\n\t */\n\t@state()\n\tisMobile = true;\n\n\toverride connectedCallback() {\n\t\tsuper.connectedCallback();\n\t\tthis.getBreakpoint();\n\t\twindow.addEventListener('resize', () => {\n\t\t\tthis.getBreakpoint();\n\t\t});\n\t}\n\n\t/**\n\t * Check if current breakpoint is mobile for icon resizing\n\t * @ignore\n\t */\n\tprivate getBreakpoint() {\n\t\tconst breakpoint = getCurrentBreakpoint();\n\t\tthis.isMobile = breakpoint === BREAKPOINTS.SM || breakpoint === BREAKPOINTS.MD;\n\t}\n\n\t/**\n\t * Render different size icon per breakpoint\n\t * @ignore\n\t */\n\tprivate get renderIcon() {\n\t\tif (this.isMobile) {\n\t\t\treturn html`<kd-icon .icon=\"${downloadIcon32}\"></kd-icon>`;\n\t\t} else {\n\t\t\treturn html`<kd-icon .icon=\"${downloadIcon20}\"></kd-icon>`;\n\t\t}\n\t}\n\n\toverride render() {\n\t\treturn html`\n\t\t\t<div class=\"kd-persistent-cta-container kd-spacing--page-gutter\">\n\t\t\t\t<div class=\"kd-grid\">\n\t\t\t\t<a class=\"kd-persistent-cta\" href=\"${this.ctaLink}\" ${this.openNewWindow ? 'target=\"_blank\"' : ''}>\n\t\t\t\t\t<span class=\"kd-persistent-cta-label\">\n\t\t\t\t\t\t<span class=\"kd-persistent-cta-label-border\"></span>\n\t\t\t\t\t\t<span class=\"kd-persistent-cta-label-text\">${this.ctaText}</span>\n\t\t\t\t\t\t<span class=\"kd-persistent-cta-label-icon\">\n\t\t\t\t\t\t\t${this.renderIcon}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"kd-persistent-cta-desc\">${this.bodyText}</span>\n\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`\n\t}\n}\n\ndeclare global {\n\tinterface HTMLElementTagNameMap {\n\t\t'kd-persistent-cta': PersistentCta;\n\t}\n}\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"import { html } from 'lit';\\nimport './index';\\n\\nexport default {\\n\\ttitle: 'Call to Action/Persistent CTA',\\n\\tcomponent: 'kd-persistent-cta',\\n\\targTypes: {\\n\\t\\tctaText: {\\n\\t\\t\\tcontrol: { type: 'text' },\\n\\t\\t},\\n\\t\\tctaLink: {\\n\\t\\t\\tcontrol: { type: 'text' },\\n\\t\\t},\\n\\t\\topenNewWindow: {\\n\\t\\t\\tcontrol: { type: 'boolean' },\\n\\t\\t},\\n\\t\\tbodyText: {\\n\\t\\t\\tcontrol: { type: 'text' },\\n\\t\\t},\\n\\t},\\n};\\n\\nconst args = {\\n\\tctaText: 'Download',\\n\\tctaLink: 'https://www.kyndryl.com',\\n\\topenNewWindow: true,\\n\\tbodyText: 'Pythagoras viros homines erit quae mecum se nisi possit optimos positum epicuro magis.',\\n}\\n\\nexport const PersistentCta = {\\n\\targs,\\n\\trender: ({...args}) => {\\n\\t\\treturn html`\\n\\t\\t\\t<div style=\\\"height: 50vh;\\\"></div><!-- simulate content height in Storybook  -->\\n\\t\\t\\t<kd-persistent-cta\\n\\t\\t\\t\\tctaText=\\\"${args.ctaText}\\\"\\n\\t\\t\\t\\tctaLink=\\\"${args.ctaLink}\\\"\\n\\t\\t\\t\\t.openNewWindow=\\\"${args.openNewWindow}\\\"\\n\\t\\t\\t\\tbodyText=\\\"${args.bodyText}\\\"\\n\\t\\t\\t></kd-persistent-cta>\\n\\t\\t`;\\n\\t}\\n}\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"PersistentCta\": {\n    \"startLoc\": {\n      \"col\": 29,\n      \"line\": 35\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 50\n    },\n    \"startBody\": {\n      \"col\": 29,\n      \"line\": 35\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 50\n    }\n  }\n};\n    \nimport { html } from 'lit';\nimport './index';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"import { html } from 'lit';\\nimport './index';\\nexport default {\\n  title: 'Call to Action/Persistent CTA',\\n  component: 'kd-persistent-cta',\\n  argTypes: {\\n    ctaText: {\\n      control: {\\n        type: 'text'\\n      }\\n    },\\n    ctaLink: {\\n      control: {\\n        type: 'text'\\n      }\\n    },\\n    openNewWindow: {\\n      control: {\\n        type: 'boolean'\\n      }\\n    },\\n    bodyText: {\\n      control: {\\n        type: 'text'\\n      }\\n    }\\n  }\\n};\\nconst args = {\\n  ctaText: 'Download',\\n  ctaLink: 'https://www.kyndryl.com',\\n  openNewWindow: true,\\n  bodyText: 'Pythagoras viros homines erit quae mecum se nisi possit optimos positum epicuro magis.'\\n};\\nexport const PersistentCta = {\\n  args,\\n  render: ({\\n    ...args\\n  }) => {\\n    return html`\\n            <div style=\\\"height: 50vh;\\\"></div><!-- simulate content height in Storybook  -->\\n            <kd-persistent-cta\\n                ctaText=\\\"${args.ctaText}\\\"\\n                ctaLink=\\\"${args.ctaLink}\\\"\\n                .openNewWindow=\\\"${args.openNewWindow}\\\"\\n                bodyText=\\\"${args.bodyText}\\\"\\n            ></kd-persistent-cta>\\n        `;\\n  }\\n};\\nPersistentCta.parameters = {\\n  ...PersistentCta.parameters,\\n  docs: {\\n    ...PersistentCta.parameters?.docs,\\n    source: {\\n      originalSource: \\\"{\\\\n  args,\\\\n  render: ({\\\\n    ...args\\\\n  }) => {\\\\n    return html`\\\\n            <div style=\\\\\\\"height: 50vh;\\\\\\\"></div><!-- simulate content height in Storybook  -->\\\\n            <kd-persistent-cta\\\\n                ctaText=\\\\\\\"${args.ctaText}\\\\\\\"\\\\n                ctaLink=\\\\\\\"${args.ctaLink}\\\\\\\"\\\\n                .openNewWindow=\\\\\\\"${args.openNewWindow}\\\\\\\"\\\\n                bodyText=\\\\\\\"${args.bodyText}\\\\\\\"\\\\n            ></kd-persistent-cta>\\\\n        `;\\\\n  }\\\\n}\\\",\\n      ...PersistentCta.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"persistent-cta\": {\n        \"startLoc\": {\n          \"col\": 29,\n          \"line\": 35\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 50\n        },\n        \"startBody\": {\n          \"col\": 29,\n          \"line\": 35\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 50\n        }\n      }\n    }\n  }\n,},\n  title: 'Call to Action/Persistent CTA',\n  component: 'kd-persistent-cta',\n  argTypes: {\n    ctaText: {\n      control: {\n        type: 'text'\n      }\n    },\n    ctaLink: {\n      control: {\n        type: 'text'\n      }\n    },\n    openNewWindow: {\n      control: {\n        type: 'boolean'\n      }\n    },\n    bodyText: {\n      control: {\n        type: 'text'\n      }\n    }\n  }\n};\nconst args = {\n  ctaText: 'Download',\n  ctaLink: 'https://www.kyndryl.com',\n  openNewWindow: true,\n  bodyText: 'Pythagoras viros homines erit quae mecum se nisi possit optimos positum epicuro magis.'\n};\nexport const PersistentCta = {\n  args,\n  render: ({\n    ...args\n  }) => {\n    return html`\n            <div style=\"height: 50vh;\"></div><!-- simulate content height in Storybook  -->\n            <kd-persistent-cta\n                ctaText=\"${args.ctaText}\"\n                ctaLink=\"${args.ctaLink}\"\n                .openNewWindow=\"${args.openNewWindow}\"\n                bodyText=\"${args.bodyText}\"\n            ></kd-persistent-cta>\n        `;\n  }\n};\nPersistentCta.parameters = {\n  ...PersistentCta.parameters,\n  docs: {\n    ...PersistentCta.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  args,\\n  render: ({\\n    ...args\\n  }) => {\\n    return html`\\n            <div style=\\\"height: 50vh;\\\"></div><!-- simulate content height in Storybook  -->\\n            <kd-persistent-cta\\n                ctaText=\\\"${args.ctaText}\\\"\\n                ctaLink=\\\"${args.ctaLink}\\\"\\n                .openNewWindow=\\\"${args.openNewWindow}\\\"\\n                bodyText=\\\"${args.bodyText}\\\"\\n            ></kd-persistent-cta>\\n        `;\\n  }\\n}\",\n      ...PersistentCta.parameters?.docs?.source\n    }\n  }\n};"],"names":[],"sourceRoot":""}